"""Change movie/imdb_data relationship

Revision ID: 2e13bb9abcee
Revises: 36da47274bd7
Create Date: 2014-12-07 13:06:57.443917

"""

# revision identifiers, used by Alembic.
revision = '2e13bb9abcee'
down_revision = '36da47274bd7'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql


connection = op.get_bind()

movie_helper = sa.Table(
    'movie',
    sa.MetaData(),
    sa.Column('id', sa.Integer, primary_key=True),
    sa.Column('imdb_id', sa.Integer),
)

imdb_data_helper = sa.Table(
    'imdb_data',
    sa.MetaData(),
    sa.Column('id', sa.Integer, primary_key=True),
    sa.Column('movie_id', sa.Integer),
)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('movie', sa.Column('imdb_id', sa.Integer(), nullable=True))

    for imdb_data_item in connection.execute(imdb_data_helper.select()):
        imdb_id = imdb_data_item.id
        connection.execute(
            movie_helper.update().where(
                movie_helper.c.id == imdb_data_item.movie_id
            ).values(
                imdb_id=imdb_id
            )
        )

    op.drop_constraint(u'imdb_data_ibfk_1', 'imdb_data', type_='foreignkey')
    op.drop_column('imdb_data', 'movie_id')
    op.create_foreign_key(None, 'movie', 'imdb_data', ['imdb_id'], ['id'])
    # ### end Alembic commands ###


# TODO: Add downgrade
def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'movie', type_='foreignkey')
    op.drop_column('movie', 'imdb_id')
    op.add_column(
        'imdb_data', sa.Column('movie_id', mysql.INTEGER(display_width=11),
                               autoincrement=False, nullable=True)
    )
    op.create_foreign_key(
        u'imdb_data_ibfk_1', 'imdb_data', 'movie', ['movie_id'], ['id']
    )
    # ### end Alembic commands ###
